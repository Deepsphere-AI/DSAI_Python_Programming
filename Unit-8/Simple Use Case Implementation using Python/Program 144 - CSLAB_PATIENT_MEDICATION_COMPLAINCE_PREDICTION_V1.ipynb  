{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNosoSKX86ZZXTXr1KeJTPz",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Deepsphere-AI/DSAI_Python_Programming/blob/main/Unit-8/Simple%20Use%20Case%20Implementation%20using%20Python/Program%20144%20-%20CSLAB_PATIENT_MEDICATION_COMPLAINCE_PREDICTION_V1.ipynb%20%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7OHhKUoQ1JZS"
      },
      "outputs": [],
      "source": [
        "# *********************************************************************************************************************\n",
        "  \n",
        "  # File Name \t:   CSLAB_PATIENT_MEDICATION_COMPLAINCE_PREDICTION_V1\n",
        "  # Purpose \t:   A Program in Python For Predicting Patient Medication Compliance Usecase\n",
        "  # Author\t:   Deepsphere.ai\n",
        "  # Reviewer \t:   Jothi Periasamy\n",
        "  # Date \t:   10/26/2022\n",
        "  # Version\t:   1.0\t\n",
        "  \n",
        "# ***********************************************************************************************************************\n",
        "\n",
        "## Program Description : Program For Predicting Patient Medication Compliance Usecase in Python\n",
        "\n",
        "## Python Development Environment & Runtime - Python, Anaconda\n",
        "\n",
        "import numpy as vAR_np\n",
        "\n",
        "import matplotlib.pyplot as vAR_plt\n",
        "\n",
        "def fnx():\n",
        "    \n",
        "    return vAR_np.random.randint(5, 50, 10)\n",
        "\n",
        "vAR_CSLAB_y = vAR_np.row_stack((fnx(), fnx(), fnx()))\n",
        "\n",
        "vAR_CSLAB_x = vAR_np.arange(10)\n",
        "\n",
        "vAR_CSLAB_y1, vAR_CSLAB_y2, vAR_CSLAB_y3 = fnx(), fnx(), fnx()\n",
        "\n",
        "vAR_CSLAB_fig, vAR_CSLAB_ax = vAR_plt.subplots()\n",
        "\n",
        "vAR_CSLAB_ax.stackplot(vAR_CSLAB_x, vAR_CSLAB_y)\n",
        "\n",
        "vAR_plt.show()\n",
        "\n",
        "vAR_CSLAB_fig, vAR_CSLAB_ax = vAR_plt.subplots()\n",
        "\n",
        "vAR_CSLAB_ax.stackplot(vAR_CSLAB_x, vAR_CSLAB_y1, vAR_CSLAB_y2, vAR_CSLAB_y3)\n",
        "\n",
        "vAR_plt.show()\n",
        "\n",
        "# ****************************************************************************************************************************\n",
        "#   Disclaimer.\n",
        "\n",
        "# We are providing this code block strictly for learning and researching, this is not a production\n",
        "# ready code. We have no liability on this particular code under any circumstances; users should use\n",
        "# this code on their own risk. All software, hardware and othr products that are referenced in these \n",
        "# materials belong to the respective vendor who developed or who owns this product.\n",
        "\n",
        "# ****************************************************************************************************************************"
      ]
    }
  ]
}