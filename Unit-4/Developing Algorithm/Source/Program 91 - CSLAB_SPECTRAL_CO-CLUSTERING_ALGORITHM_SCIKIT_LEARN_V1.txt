
/*********************************************************************************************************************
  
  File Name 	:   CSLAB_SPECTRAL_CO-CLUSTERING_ALGORITHM_SCIKIT_LEARN_V1
  Purpose 	:   A Program in Python for Spectral Co-Clustering Algorithm Using SCIKIT LEARN
  Author	:   Durga Prasad
  Reviewer 	:   Jothi Periasamy
  Date and Time	:   14/12/2018 17:13 hrs
  Version	:   1.0	
  Change History: 
_______________________________________________________________________________________________________________________

   Who				   When 			        Why
_______________________________________________________________________________________________________________________


    DP				14/12/2018		           Initital Release 

________________________________________________________________________________________________________________________


/***********************************************************************************************************************

## Program Description : Program for Spectral Co-Clustering Algorithm in Python

## Python Development Environment & Runtime - Python, Anaconda

import numpy as vAR_np

from matplotlib import pyplot as vAR_plt

from sklearn.datasets import make_biclusters

from sklearn.datasets import samples_generator as vAR_sg

from sklearn.cluster.bicluster import SpectralCoclustering

from sklearn.metrics import consensus_score

vAR_CSLAB_data, vAR_CSLAB_rows, vAR_CSLAB_columns = make_biclusters(
    shape=(300, 300), n_clusters=5, noise=5,
    shuffle=False, random_state=0)

vAR_plt.matshow(vAR_CSLAB_data, cmap=vAR_plt.cm.Blues)

vAR_plt.title("Original dataset")

vAR_CSLAB_data, vAR_CSLAB_row_idx, vAR_CSLAB_col_idx = vAR_sg._shuffle(vAR_CSLAB_data, random_state=0)

vAR_plt.matshow(vAR_CSLAB_data, cmap=vAR_plt.cm.Blues)

vAR_plt.title("Shuffled dataset")

vAR_CSLAB_model = SpectralCoclustering(n_clusters=5, random_state=0)

vAR_CSLAB_model.fit(vAR_CSLAB_data)
 
vAR_CSLAB_score = consensus_score(vAR_CSLAB_model.biclusters_,
                        (vAR_CSLAB_rows[:, vAR_CSLAB_row_idx], vAR_CSLAB_columns[:, vAR_CSLAB_col_idx]))

print("consensus score: {:.3f}".format(vAR_CSLAB_score))

vAR_CSLAB_fit_data = vAR_CSLAB_data[vAR_np.argsort(vAR_CSLAB_model.row_labels_)]

vAR_CSLAB_fit_data = vAR_CSLAB_fit_data[:, vAR_np.argsort(vAR_CSLAB_model.column_labels_)]

vAR_plt.matshow(vAR_CSLAB_fit_data, cmap=vAR_plt.cm.Blues)

vAR_plt.title("After biclustering; rearranged to show biclusters")

vAR_plt.show()

/****************************************************************************************************************************
  Disclaimer.

We are providing this code block strictly for learning and researching, this is not a production
ready code. We have no liability on this particular code under any circumstances; users should use
this code on their own risk. All software, hardware and othr products that are referenced in these 
materials belong to the respective vendor who developed or who owns this product.

/****************************************************************************************************************************
   