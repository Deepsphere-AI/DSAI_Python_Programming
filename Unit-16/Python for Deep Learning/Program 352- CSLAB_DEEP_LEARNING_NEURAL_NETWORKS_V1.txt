
/*********************************************************************************************************************
  
  File Name 	:   CSLAB_DEEP_LEARNING_NEURAL_NETWORKS_V1
  Purpose 	:   A Program in Python for Neural Networks - Deep Learning
  Author	:   Durga Prasad
  Reviewer 	:   Jothi Periasamy
  Date and Time	:   07/01/2019 15:51 hrs
  Version	:   1.0	
  Change History: 
_______________________________________________________________________________________________________________________

   Who				   When 			        Why
_______________________________________________________________________________________________________________________


    DP				07/01/2019		           Initital Release 

________________________________________________________________________________________________________________________


/***********************************************************************************************************************

## Program Description : Program for Neural Networks - Deep Learning in Python

## Python Development Environment & Runtime - Python, Anaconda, Tensorflow, Tensorboard

import tensorflow as vAR_tf
vAR_sess = vAR_tf.Session()

vAR_CSLAB_a = vAR_tf.Variable(vAR_tf.constant(4.))
vAR_CSLAB_x_val = 5.
vAR_CSLAB_x_data = vAR_tf.placeholder(dtype=vAR_tf.float32)

vAR_CSLAB_multiplication = vAR_tf.multiply(vAR_CSLAB_a, vAR_CSLAB_x_data)

vAR_CSLAB_loss = vAR_tf.square(vAR_tf.subtract(vAR_CSLAB_multiplication, 50.))

vAR_CSLAB_init = vAR_tf.global_variables_initializer()
vAR_sess.run(vAR_CSLAB_init)
vAR_CSLAB_my_opt = vAR_tf.train.GradientDescentOptimizer(0.01)
vAR_CSLAB_train_step = vAR_CSLAB_my_opt.minimize(vAR_CSLAB_loss)

print('Optimizing a Multiplication Gate Output to 50.')
for i in range(10):
    vAR_CSLAB_a_val_old = vAR_sess.run(vAR_CSLAB_a)
    print(vAR_CSLAB_a_val_old)
    vAR_sess.run(vAR_CSLAB_train_step, feed_dict={vAR_CSLAB_x_data: vAR_CSLAB_x_val})
    vAR_CSLAB_a_val = vAR_sess.run(vAR_CSLAB_a)
    vAR_CSLAB_mult_output = vAR_sess.run(vAR_CSLAB_multiplication, feed_dict={vAR_CSLAB_x_data: vAR_CSLAB_x_val})
    print(str(vAR_CSLAB_a_val) + ' * ' + str(vAR_CSLAB_x_val) + ' = ' + str(vAR_CSLAB_mult_output))  
    
/****************************************************************************************************************************
  Disclaimer.

We are providing this code block strictly for learning and researching, this is not a production
ready code. We have no liability on this particular code under any circumstances; users should use
this code on their own risk. All software, hardware and othr products that are referenced in these 
materials belong to the respective vendor who developed or who owns this product.

/****************************************************************************************************************************
  