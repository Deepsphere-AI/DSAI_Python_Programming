
/*********************************************************************************************************************
  
  File Name 	:   CSLAB_DEEP_LEARNNG_RANDOM_FOREST_V1
  Purpose 	:   A Program in Python for Random Forest - Deep Learning
  Author	:   Durga Prasad
  Reviewer 	:   Jothi Periasamy
  Date and Time	:   07/01/2019 11:59 hrs
  Version	:   1.0	
  Change History: 
_______________________________________________________________________________________________________________________

   Who				   When 			        Why
_______________________________________________________________________________________________________________________


    DP				07/01/2019		           Initital Release 

________________________________________________________________________________________________________________________


/***********************************************************************************************************************

## Program Description : Program for Random Forest - Deep Learning in Python

## Python Development Environment & Runtime - Python, Anaconda, Tensorflow, Tensorboard

from __future__ import print_function

import numpy as vAR_np

import sklearn

from sklearn import datasets

import pandas as vAR_pd

import tensorflow as vAR_tf

#from tensorflow.contrib.tensor_forest.python import tensor_forest

from tensorflow.python.ops import resources

vAR_CSLAB_data = vAR_pd.read_csv('Iris.csv')

vAR_CSLAB_input_x = vAR_CSLAB_data.iloc[:, 0:-1].values

vAR_CSLAB_input_y = vAR_CSLAB_data.iloc[:,4].values

from sklearn.model_selection import train_test_split

vAR_CSLAB_X_train, vAR_CSLAB_X_test, vAR_CSLAB_y_train, vAR_CSLAB_y_test = train_test_split(vAR_CSLAB_input_x, vAR_CSLAB_input_y, test_size = 0.25, random_state = 0)

vAR_CSLAB_data1 = vAR_CSLAB_data.iloc[:,:].values

# Parameters

vAR_CSLAB_num_steps = 100 # Total steps to train

vAR_CSLAB_num_classes = 2 

vAR_CSLAB_num_features = 108 

vAR_CSLAB_num_trees = 10 

vAR_CSLAB_max_nodes = 1000

# Input and Target placeholders 

vAR_CSLAB_X = vAR_tf.placeholder(vAR_tf.float32, shape=[None, vAR_CSLAB_num_features])

vAR_CSLAB_Y = vAR_tf.placeholder(vAR_tf.int64, shape=[None])


/****************************************************************************************************************************
  Disclaimer.

We are providing this code block strictly for learning and researching, this is not a production
ready code. We have no liability on this particular code under any circumstances; users should use
this code on their own risk. All software, hardware and othr products that are referenced in these 
materials belong to the respective vendor who developed or who owns this product.

/****************************************************************************************************************************
  